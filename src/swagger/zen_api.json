{
  "openapi": "3.0.0",
  "info": {
    "title": "ZEN Task Manager API",
    "description": "ZEN is a task management web application, and this is its API documentation based on the OpenAPI 3.0 specification. The API allows you to create, update, and manage tasks and projects efficiently. You can contribute by improving the API definition or enhancing the code to leverage the advanced features of OAS3.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/api"
    }
  ],
  "tags": [
    {
      "name": "Tasks",
      "description": "Manage tasks in the application, allowing you to create, view, update, and delete tasks."
    }
  ],
  "paths": {
    "/tasks": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a new task",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyTaskPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "(OK) The task has been created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessfullyTaskCreated"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get all the tasks.",
        "responses": {
          "200": {
            "description": "(OK) Task information was obtained correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessGetTasks"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/task/{ID}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get one particular task.",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "Unique ID of the task to be searched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(OK) Task information was obtained correctly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessGetTasks"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update a task.",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "Unique ID of the task to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyTaskPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "(OK) The task data has been updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessfullyTaskUpdated"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a task.",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "Unique ID of the task to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(OK) The task has been deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessfullyTaskDeleted"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "NotFound": {
        "description": "(NotFound) Task not found"
      },
      "BadRequest": {
        "description": "(Bad Request) The data sent is incorrect or there is mandatory data not sent"
      },
      "ServerError": {
        "description": "Server Error"
      }
    },
    "schemas": {
      "SuccessfullyTaskCreated": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Task deleted successfully"
          },
          "data": {
            "type": "string",
            "example": "Deleted Task Object"
          }
        }
      },
      "BodyTaskPost": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Title of the task"
          },
          "description": {
            "type": "string",
            "example": "A short description of the task (optional)"
          },
          "completed": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "SuccessfullyTaskDeleted": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Task deleted successfully"
          },
          "data": {
            "type": "string",
            "example": "Deleted Task Object"
          }
        }
      },
      "SuccessfullyTaskUpdated": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Task updated successfully"
          }
        }
      },
      "SuccessGetTasks": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "example": "64c3f25b12abf4567d8e9f01"
          },
          "title": {
            "type": "string",
            "example": "This is a task"
          },
          "description": {
            "type": "string",
            "example": "This is a task description"
          },
          "completed": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "example": "12-06-2003 12:04"
          }
        }
      }
    }
  }
}